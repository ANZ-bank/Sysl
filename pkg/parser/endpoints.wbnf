endpoint -> (rest_endpoint | collector | event | simple_endpoint);

simple_endpoint -> endpoint_name=(APPNAME) QSTRING? params? attribs? 
                    (
                        ":"
                           (
                               WRAPPED_SHORTCUT
                               | %!InlineCommentIndent(annotation | stmt)
                           )
                    )?;

rest_endpoint -> http_path attribs? ":"
                 %!InlineCommentIndent(method_def | rest_endpoint);

method_def -> method=(HTTP_VERBS) params? query_param? attribs? ":"
              %!InlineCommentIndent(stmt);

params -> "(" (COMMENT* (field | reference)):"," ")" {
    .wrapRE -> /{\s*()\s*};
};

query_param -> "?" (ident=(NAME) "=" (NativeDataTypes| NAME | "{" NAME "}") optional="?"?):"&";

field -> NAME array_size? "<:"
         (
             field_type
             | %!InlineCommentIndent(field | unspecified_type=NAME)
         )
         QSTRING? COMMENT_NO_NL?;

field_type -> collection_type | (type_spec optional="?"? attribs?) ;

collector -> '.. * <- *' ":"
             (WRAPPED_SHORTCUT | %!InlineCommentIndent(collector_stmt));

collector_stmt -> (
                    collector_http_stmt
                    | collector_pubsub_call
                    | collector_call_stmt
                    | action=APPNAME
                ) attribs;

collector_call_stmt -> target=APPNAME "<-" target_endpoint=(rest_endpoint_call_part | APPNAME_PART);

collector_http_stmt -> rest_endpoint_call_part ("?" (param=NAME "=" type=(NativeDataTypes | NAME)):"&")?;

rest_endpoint_call_part -> method=HTTP_VERBS "/" (http_path_part | "{" http_path_part "}"):"/",;

collector_pubsub_call -> subscriber=APPNAME "<-" publisher=APPNAME "->" name=TEXT_WITH_WHITESPACE;
