endpoint -> (rest_endpoint | simple_endpoint | collector | event);

simple_endpoint -> (
                        endpoint_name=(APPNAME) QSTRING? params? attribs? ":"
                        (
                            SHORTCUT
                            | %!Indented(annotation | stmt)
                        )
                   );

rest_endpoint -> http_path attribs? ":" %!Indented(method_def | rest_endpoint);

method_def -> method=(HTTP_VERBS) params? query_param? attribs? ":" %!Indented(stmt);

params -> "(" (field | reference):"," ")" {
    .wrapRE -> /{\s*()\s*};
};

query_param -> "?" (ident=(NAME) "=" (NativeDataTypes| NAME | "{" NAME "}") optional="?"?):"&";

field -> NAME array_size? "<:" (field_type | %!Indented(field)) QSTRING?;

field_type -> collection_type | (type_spec optional="?"? attribs?) ;

collector -> '.. * <- *' ":" (SHORTCUT | %!Indented(collector_stmt));

collector_stmt -> (
                    collector_http_stmt
                    | collector_pubsub_call
                    | collector_call_stmt
                    | action=APPNAME
                ) attribs;

collector_call_stmt -> target=APPNAME "<-" target_endpoint=APPNAME_PART;

collector_http_stmt -> method=HTTP_VERBS "/" (http_path_part | "{" http_path_part "}"):"/" ("?" (param=NAME "=" type=(NativeDataTypes | NAME)):"&")?;

collector_pubsub_call -> subscriber=APPNAME "<-" publisher=APPNAME "->" name=NAME;
