# Renders the sysl-go debug trace details screen.

let cleanHeaders = \hs hs >> cond . {[x]: x, _: .};
let cleanEntry = \ej 
    let clean = (
        serviceName: ej('serviceName'),
        request: //tuple(ej('request')),
        response: //tuple(ej('response')),
    );
    clean -> . +> (
        request: .request +> (headers: cleanHeaders(.request.headers)),
        response: .response +> (headers: cleanHeaders(.response.headers)),
    )
;
let cleanMetadata = \mj //tuple(//{./json}.simplify(mj)) -> \m
    m +> (entries: m.entries?:[] >> cleanEntry(.));
let parseMetadata = \mj cleanMetadata(//encoding.json.decode(mj));

(
    index: \m
        //{./debug_index}.render(parseMetadata(m)),
    trace: \m \traceId \svg
        //{./debug_trace}.render(parseMetadata(m), traceId, svg),
)
