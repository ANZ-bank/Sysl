\apps (
    let unpackType = //{./../util}.unpackType;
    apps => (
        let app = .@;
        .@value.endpoints?:{} => (
            let ep = .@;
            let ret = .@value.stmt?:{} where .@item.ret?:false;
            (
                ret => let currType = unpackType(.@item.ret.payload.type);
                    (:app, :ep, from: currType, to: currType)
            ) | (
                    (
                        ret =>
                        let payload = .@item.ret.payload;
                        let currType = unpackType(payload.type);
                        payload.attr?.nvp('dataflow')?:{} => (
                            :app,
                            :ep,
                            from: unpackType(.@item),
                            to: currType
                        )
                ) -> //rel.union(.)
            )
        ) -> //rel.union(.)
    ) -> //rel.union(.)
)