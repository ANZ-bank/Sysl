Source[~db]:
    !type Customer:
        id <: int
        name <: string
        foo <: int

    Select(id <: int):
        return x <: Customer

A:
    Fetch(req <: FetchRequest):
        # TODO: Construct Source.Select.id from req.
        Source <- Select(req)
        # TODO: Construct FetchResponse from response.
        return ok <: FetchResponse

    !type FetchRequest:
        user_id <: int

    !type FetchResponse:
        user_name <: string

B:
    Fetch:
        Source <- Select

C:
    FetchA:
        A <- Fetch

    FetchB:
        B <- Fetch

    Fetch:
        . <- FetchA
        . <- FetchB

D:
    Fetch(req <: FetchRequest):
        # TODO: Construct A.FetchRequest from req.
        A <- Fetch(req)
        C <- Fetch
        # TODO: Construct FetchResponse from response.
        return ok <: FetchResponse

    !type FetchRequest:
        userId <: int

    !type FetchResponse:
        userName <: string

Client:
    ProfileScreen:
        # TODO: Construct D.FetchRequest from context.
        D <- Fetch
        # TODO: Construct Profile from response.
        return ok <: Profile

    !type Profile:
        displayName <: string