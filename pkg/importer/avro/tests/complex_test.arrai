//test.assert.equal(
`##########################################
##                                      ##
##  AUTOGENERATED CODE -- DO NOT EDIT!  ##
##                                      ##
##########################################
Avro[avro_spec="1.0", package="com.example"]:
    # Types

    !type EventUUID:
        id <: string


    !type Event[namespace="com.example"]:
        action <: Action
        header <: Header
        body <: Party?[union=['Party', 'null']]
        mapRecords <: set of StringMapRecordItem
        relationships <: sequence of Relationship
        tagList <: sequence of string[default="['tag1', 'tag2']"]
        len <: bytes(16)[~fixed, namespace="com.example"]
        occurrenceDateTime <: datetime[~timestamp-millis, description="The date and time, to millisecond precision, that this event occurred"]
        amount <: decimal(4.2)[description="Amount", default="0"]


    !type Header:
        eventUUID <: EventUUID


    !type Owner:
        id <: string
        ownerTags <: sequence of OwnerTag?


    !type OwnerTag:
        id <: string
        tag <: string


    !type Party[description="Party Details"]:
        id <: string[description="A unique identifier for party"]
        subject <: Subject


    !type Relationship[namespace="com.example", description="account relationship."]:
        owner <: Owner?
        performedAction <: Action
        relationshipType <: string[description="This would be the business key for uniquely identifying a relation"]
        startDate <: string?[description="Relationship start date", default="null"]
        endDate <: string?[union=['string', 'null'], description="Relationship end date", default="null"]
        issueDate <: IntString?[union=['int', 'string', 'null'], description="Relationship issue date", default="null"]
        closeDate <: StringInt?[description="Relationship close date", default="null"]
        realCloseDate <: StringInt?[union=['string', 'null', 'int'], description="Relationship real close date", default="null"]
        updateDate <: StringInt[description="Relationship update date", default="null", order="ascending"]
        updateDate1 <: StringInt[description="Relationship update date", default="null", order="ascending", alias_of="updateDate"]
        updateDate2 <: StringInt[description="Relationship update date", default="null", order="ascending", alias_of="updateDate"]
        titleList <: sequence of string?[default="[]"]
        tagList <: StringSequenceTagListItemSequence?[union=['StringSequence', 'null', 'tagListItemSequence'], default="[]"]
        titleMap <: set of string
        tagMap <: StringSetTagMapItemSet?

    !alias P1:
        Relationship

    !alias P2:
        Relationship
    !type StringMapRecordItem[json_map_key="key"]:
        key <: string
        value <: MapRecord


    !type MapRecord:
        id <: string


    !type StringtagMapItemItem[json_map_key="key"]:
        key <: string
        value <: tagMapItem


    !type tagMapItem:
        id <: string
        name <: string


    !type Subject:
        id <: string


    !type tagListItem:
        id <: string
        name <: string


    # Unions

    !union IntString:
        int
        string

    !union StringInt:
        string
        int

    !union StringSequenceTagListItemSequence:
        StringSequence
        tagListItemSequence

    !union StringSetTagMapItemSet:
        StringSet
        tagMapItemSet

    # Enums

    !enum Action[namespace="com.example", default="add", description="Performed action"]:
        add: 0
        update: 1
        delete: 2
        none: 3

    !alias E1:
        Action

    !alias E2:
        Action`,
//{./../transformer}("complex.avsc", "Avro", "com.example")
)