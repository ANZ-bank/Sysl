!grammar base [-COMMENT]:
    # Rules

    Grammar:
        "!grammar" NAME Flags? ":" INDENT Rule* OUTDENT

    # Valid flags:
    #   +token: emit the given token
    #   -token: elide the given token
    #
    # Predefined tokens INDENT, OUTDENT and WHITESPACE are recognised but
    # elided by default unless referenced somewhere in the grammar.
    Flags:
        "[" Flag:"," "]"

    Flag:
        <sign>/[-+]/ <token>NAME

    Rule:
        RuleName Flags? ":" INDENT Body OUTDENT

    (RuleName):
        <name>NAME
        # Alias rules are omitted from the AST structure. Primarily, they
        # allow refactoring of the grammar with polluting the tree and without
        # breaking an existing AST's structure.
        "(" <alias>NAME ")"

    Body:
        Choice:/[|\n]/

    Choice:
        Term+ (INDENT Term+:"\n")?

    Term:
        Atom Quantifier

    Atom:
        ("<" NAME ">")? ( string | regexp | "(" NestedBody ")" )

    (NestedBody) [-INDENT, -OUTDENT]:
        Body

    Quantifier:
        ( <opt>"?" | <zero_plus>"*" | <one_plus>"+" | ":" <separator>Atom )*


    # Tokens

    name: /[A-Za-z_][0-9A-Za-z_]*/

    string:
        /"(
            [^"\\\n\{Cc}]  # \{Cc} = control characters
            |
            \\( ["\\\/bfnrt] | u[0-9a-fA-F]{4} )
        )*"/

    regexp:
        /\/(
            [^"\\]
            |
            \\( [^u] | u[0-9A-Fa-f]{4} )
        )*\//

    COMMENT: /#.*/
