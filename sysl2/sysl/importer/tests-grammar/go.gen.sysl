##########################################
##                                      ##
##  AUTOGENERATED CODE -- DO NOT EDIT!  ##
##                                      ##
##########################################

Go "GoFile":
    @description =:
        | Go Grammar

    #---------------------------------------------------------------------------
    # definitions

    !type AliasDecl:
        identifier <: string:
            @json_tag = "identifier"
        Type <: string?:
            @json_tag = "Type"

    !type AssignStmt:
        Variables <: string:
            @json_tag = "Variables"
        Expression <: Expression:
            @json_tag = "Expression"

    !type Block:
        StatementList <: sequence of StatementList?:
            @json_tag = "StatementList"

    !type ConstDecl:
        ConstSpec <: ConstSpec:
            @json_tag = "ConstSpec"

    !type ConstSpec:
        VarName <: string:
            @json_tag = "VarName"
        TypeName <: string:
            @json_tag = "TypeName"
        ConstValue <: string:
            @json_tag = "ConstValue"

    !type Declaration:
        VarDecl <: VarDecl:
            @json_tag = "VarDecl"
        VarDeclWithVal <: VarDeclWithVal:
            @json_tag = "VarDeclWithVal"
        ConstDecl <: ConstDecl:
            @json_tag = "ConstDecl"
        StructType <: StructType:
            @json_tag = "StructType"
        InterfaceType <: InterfaceType:
            @json_tag = "InterfaceType"
        AliasDecl <: AliasDecl:
            @json_tag = "AliasDecl"

    !type DeclareAndAssignStmt:
        Variables <: string:
            @json_tag = "Variables"
        Expression <: Expression:
            @json_tag = "Expression"

    !type Expression:
        FunctionCall <: FunctionCall:
            @json_tag = "FunctionCall"
        NewStruct <: NewStruct:
            @json_tag = "NewStruct"
        GetArg <: GetArg:
            @json_tag = "GetArg"
        ValueExpr <: string:
            @json_tag = "ValueExpr"
        NewSlice <: NewSlice:
            @json_tag = "NewSlice"
        Map <: Map:
            @json_tag = "Map"

    !type FieldDecl:
        identifier <: string:
            @json_tag = "identifier"
        Type <: string?:
            @json_tag = "Type"
        Tag <: string?:
            @json_tag = "Tag"

    !type ForLoop:
        LoopVar <: string:
            @json_tag = "LoopVar"
        Variable <: string:
            @json_tag = "Variable"
        Block <: Block:
            @json_tag = "Block"

    !type FuncArgsRest:
        Expression <: Expression:
            @json_tag = "Expression"

    !type FunctionArgs:
        Expression <: Expression:
            @json_tag = "Expression"
        FuncArgsRest <: sequence of FuncArgsRest?:
            @json_tag = "FuncArgsRest"

    !type FunctionCall:
        FunctionName <: string:
            @json_tag = "FunctionName"
        FunctionArgs <: FunctionArgs?:
            @json_tag = "FunctionArgs"

    !type FunctionDecl:
        FunctionName <: string:
            @json_tag = "FunctionName"
        Signature <: Signature?:
            @json_tag = "Signature"
        Block <: Block:
            @json_tag = "Block"

    !type GetArg:
        LHS <: string:
            @json_tag = "LHS"
        RHS <: string:
            @json_tag = "RHS"

    !type IdentifierList:
        identifier <: string:
            @json_tag = "identifier"
        IdentifierListC <: sequence of IdentifierListC?:
            @json_tag = "IdentifierListC"

    !type IdentifierListC:
        identifier <: string:
            @json_tag = "identifier"

    !type IfElseStmt:
        Expression <: Expression:
            @json_tag = "Expression"
        Block <: Block:
            @json_tag = "Block"

    !alias Import:
        string

    !type ImportDecl:
        ImportSpec <: sequence of ImportSpec?:
            @json_tag = "ImportSpec"

    !type ImportSpec:
        __Choice_ImportSpec <: __Choice_ImportSpec:
            @json_tag = "__Choice_ImportSpec"

    !type IncrementVarByStmt:
        Variables <: string:
            @json_tag = "Variables"
        Expression <: Expression:
            @json_tag = "Expression"

    !type InterfaceType:
        InterfaceName <: string:
            @json_tag = "InterfaceName"
        MethodSpec <: sequence of MethodSpec?:
            @json_tag = "MethodSpec"
        MethodDecl <: sequence of MethodDecl?:
            @json_tag = "MethodDecl"

    !type KeyValuePair:
        Key <: string:
            @json_tag = "Key"
        Value <: string:
            @json_tag = "Value"

    !type KeyValuePairs:
        KeyValuePair <: sequence of KeyValuePair?:
            @json_tag = "KeyValuePair"

    !type Map:
        KeyType <: string:
            @json_tag = "KeyType"
        ValType <: string:
            @json_tag = "ValType"
        KeyValuePairs <: KeyValuePairs?:
            @json_tag = "KeyValuePairs"

    !type MethodDecl:
        Receiver <: Receiver:
            @json_tag = "Receiver"
        FunctionName <: string:
            @json_tag = "FunctionName"
        Signature <: Signature?:
            @json_tag = "Signature"
        Block <: Block?:
            @json_tag = "Block"

    !type MethodSpec:
        MethodName <: string:
            @json_tag = "MethodName"
        Signature <: Signature:
            @json_tag = "Signature"
        InterfaceTypeName <: string:
            @json_tag = "InterfaceTypeName"

    !type NamedImport:
        Name <: string:
            @json_tag = "Name"
        Import <: string:
            @json_tag = "Import"

    !type NewSlice:
        TypeName <: string:
            @json_tag = "TypeName"
        SliceValues <: string?:
            @json_tag = "SliceValues"

    !type NewStruct:
        StructName <: string:
            @json_tag = "StructName"

    !type PackageClause:
        PackageName <: string:
            @json_tag = "PackageName"

    !type ParameterDecl:
        Identifier <: string:
            @json_tag = "Identifier"
        TypeName <: string:
            @json_tag = "TypeName"

    !type ParameterDeclC:
        ParameterDecl <: ParameterDecl:
            @json_tag = "ParameterDecl"

    !type ParameterList:
        ParameterDecl <: ParameterDecl:
            @json_tag = "ParameterDecl"
        ParameterDeclC <: sequence of ParameterDeclC?:
            @json_tag = "ParameterDeclC"

    !type Parameters:
        ParameterList <: ParameterList?:
            @json_tag = "ParameterList"

    !alias PayLoad:
        string

    !type Receiver:
        ReceiverType <: string:
            @json_tag = "ReceiverType"

    !type Result:
        ReturnTypes <: ReturnTypes:
            @json_tag = "ReturnTypes"
        TypeName <: string:
            @json_tag = "TypeName"

    !type ResultTypeList:
        TypeName <: string:
            @json_tag = "TypeName"

    !type ReturnStmt:
        __Choice_ReturnStmt <: __Choice_ReturnStmt:
            @json_tag = "__Choice_ReturnStmt"

    !type ReturnTypes:
        TypeName <: string:
            @json_tag = "TypeName"
        ResultTypeList <: sequence of ResultTypeList?:
            @json_tag = "ResultTypeList"

    !type Signature:
        Parameters <: Parameters:
            @json_tag = "Parameters"
        Result <: Result?:
            @json_tag = "Result"

    !type Statement:
        ReturnStmt <: ReturnStmt:
            @json_tag = "ReturnStmt"
        DeclareAndAssignStmt <: DeclareAndAssignStmt:
            @json_tag = "DeclareAndAssignStmt"
        AssignStmt <: AssignStmt:
            @json_tag = "AssignStmt"
        IfElseStmt <: IfElseStmt:
            @json_tag = "IfElseStmt"
        IncrementVarByStmt <: IncrementVarByStmt:
            @json_tag = "IncrementVarByStmt"
        FunctionCall <: FunctionCall:
            @json_tag = "FunctionCall"
        VarDecl <: VarDecl:
            @json_tag = "VarDecl"
        ForLoop <: ForLoop:
            @json_tag = "ForLoop"

    !type StatementList:
        Statement <: Statement:
            @json_tag = "Statement"

    !type StructType:
        StructName <: string:
            @json_tag = "StructName"
        FieldDecl <: sequence of FieldDecl?:
            @json_tag = "FieldDecl"

    !type TopLevelDecl:
        Comment <: string:
            @json_tag = "Comment"
        __Choice_TopLevelDecl <: __Choice_TopLevelDecl:
            @json_tag = "__Choice_TopLevelDecl"

    !type TypeList:
        TypeName <: string:
            @json_tag = "TypeName"

    !type VarDecl:
        identifier <: string:
            @json_tag = "identifier"
        TypeName <: string:
            @json_tag = "TypeName"

    !type VarDeclWithVal:
        identifier <: string:
            @json_tag = "identifier"
        Expression <: Expression:
            @json_tag = "Expression"

    !union __Choice_ImportSpec:
        Import
        NamedImport

    !union __Choice_ReturnStmt:
        PayLoad
        Expression

    !union __Choice_TopLevelDecl:
        Declaration
        FunctionDecl
        MethodDecl

    !type goFile:
        PackageClause <: PackageClause:
            @json_tag = "PackageClause"
        Comment <: string?:
            @json_tag = "Comment"
        ImportDecl <: ImportDecl?:
            @json_tag = "ImportDecl"
        TopLevelDecl(1..) <: TopLevelDecl:
            @json_tag = "TopLevelDecl(1..)"
