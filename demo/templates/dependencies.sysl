# Example template file demonstrating how to use the template views
# -> Will dump the input model to a simplified text file


DependencyTemplate:

    !view findEpDeps(ep <: sysl.Endpoint) -> set of string:
        ep -> (s:
            let targets = ep.value.stmts where(.type == "call") -> <sequence of string> (t:
                arg = '"' + t.target + '"'
            )
            out = targets flatten(.arg)
        )

    !view dump(app <: sysl.App) -> string:
        app -> (:
            let targets = app.endpoints -> <sequence of string> (ep:
                out = findEpDeps(ep)
            )

            $ {{ "{$ app.name $}": {$ targets flatten(.out) flatten(.out) flatten(.) $} }}\
        )

    !view start(mod <: sysl.TemplateInput) -> sysl.TemplateResult:
        mod -> (:
            Filename = "foo.json"
            let apps = mod.Apps -> <sequence of string> (a:
                out = dump(a)
            )
            Data = "[\n" + Join(apps, ",\n") + "\n]"
        )
