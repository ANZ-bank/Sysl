# Example template file demonstrating how to use the template views
# -> Will dump the input model to a simplified text file


DependencyTemplate:
    !view start(module <: sysl.TemplateInput) -> sysl.TemplateResult:
        module -> (:

          let apps = module.Apps -> <set of string> (a:
            out = getDeps(a)
          )

          $! comment {$ apps flatten(.out) $}
          Data = "[\n" + Join(apps flatten(.out), "\n")  + "\n]"
          Filename = "deps.json"
        )

    !view getDeps(app <: sysl.App) -> set of string:
        app -> (a:
            let targets = a.value.endpoints -> <set of string> (ep:
              let calls = ep.value.stmts where(.type == "call") -> <set of string> (t:
                arg = '"' + t.target + '"'
              )
              out = calls flatten(.arg)
            )
            out = targets flatten(.out)
        )
